// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleLibrary.Persistence;

namespace SimpleLibrary.Persistence.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20211210120256_authorExtension")]
    partial class authorExtension
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("SimpleLibrary.Domain.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("SimpleLibrary.Domain.Book.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Author")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("BookTypeId")
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("BookTypeId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("SimpleLibrary.Domain.BookType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("BookType");
                });

            modelBuilder.Entity("SimpleLibrary.Domain.Book.Book", b =>
                {
                    b.HasOne("SimpleLibrary.Domain.BookType", null)
                        .WithMany("Books")
                        .HasForeignKey("BookTypeId");
                });

            modelBuilder.Entity("SimpleLibrary.Domain.BookType", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
